// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ICustomAuth0Claims is an autogenerated mock type for the ICustomAuth0Claims type
type ICustomAuth0Claims struct {
	mock.Mock
}

// HasAllScopes provides a mock function with given fields: _a0
func (_m *ICustomAuth0Claims) HasAllScopes(_a0 []string) bool {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for HasAllScopes")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func([]string) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Validate provides a mock function with given fields: _a0
func (_m *ICustomAuth0Claims) Validate(_a0 context.Context) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Validate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewICustomAuth0Claims creates a new instance of ICustomAuth0Claims. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewICustomAuth0Claims(t interface {
	mock.TestingT
	Cleanup(func())
}) *ICustomAuth0Claims {
	mock := &ICustomAuth0Claims{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
