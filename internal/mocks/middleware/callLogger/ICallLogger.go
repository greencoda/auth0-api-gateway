// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// ICallLogger is an autogenerated mock type for the ICallLogger type
type ICallLogger struct {
	mock.Mock
}

// Handler provides a mock function with given fields: h
func (_m *ICallLogger) Handler(h http.Handler) http.Handler {
	ret := _m.Called(h)

	if len(ret) == 0 {
		panic("no return value specified for Handler")
	}

	var r0 http.Handler
	if rf, ok := ret.Get(0).(func(http.Handler) http.Handler); ok {
		r0 = rf(h)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.Handler)
		}
	}

	return r0
}

// NewICallLogger creates a new instance of ICallLogger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewICallLogger(t interface {
	mock.TestingT
	Cleanup(func())
}) *ICallLogger {
	mock := &ICallLogger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
